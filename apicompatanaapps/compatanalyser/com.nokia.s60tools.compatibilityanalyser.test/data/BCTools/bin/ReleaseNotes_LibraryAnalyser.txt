===============================================================================

RELEASE NOTES - LIBRARYANALYSER v3.3.0
RELEASED 7th April 2009

SUPPORTS SymbianOS 6.1+

===============================================================================

Product Description:
====================
LibraryAnalyser is a command line tool that can be used to compare modified DSO
and LIB import library files to those in a baseline and to report any changes
that can affect binary compatibility. 

Main Features:
==============
- Read symbol tables from import libaries and check binary compatibility by
  comparing symbol tables of two versions of same file
- Support for reading .dll files and .lib files or .dso files
- Generate a report file in XML format
- Allow specific changes in function signatures

===============================================================================

What's New in v3.3.0
====================
- Change: OrdinalChecker re-branded as LibraryAnalyser
- Feature: LibraryAnalyser now analyses dll files also
- Fix: LibraryAnalyser now analyses .dso/.lib files only and not .dso*/.lib*
  files

===============================================================================

Installation Notes:
===================
LibraryAnalyser is part of Compatibility Analyser tool suite. Please refer to
Compatibility Analyser documentation for details.

===============================================================================

System Requirements:
====================
Basic Requirements:
- Windows 2000 or XP with 256MB RAM

===============================================================================

Compatibility Issues:
=====================
N/A

===============================================================================

Known Issues:
=============
- RVCT toolset slowness:
  If your installed RVCT toolset does not have a noce-locked license, it will
  get a license for each import library every time. This may cause the cache
  generation become very slow. If this is causing problems, try the --uselibs
  parameter or use the GCCE tool chain instead.
  
- C++Filt location when RVCT toolchain is used:
  When you use the RVCT toolchain, you must also specify a location to the
  c++filt tool since the RVCT toolchain does not provide that. It is
  recommended to use the cfilt.exe provided with LibraryAnalyser installed since
  it has been tested to work correctly. C++filt.exe provided by the Symbian/S60
  platform cannot be used since it is not compatible.
  
===============================================================================

Version History:
================

Version 3.2.0 - 17th February 2009
--------------------------------
- Feature: Added support to verify source compatibility breaks
- Feature: Added support for displaying baseline and curent platform versions
- Change: Versioned library names will be excluded from analysis unless 
  explicitly specified with the -set parameter 

Version 3.1.0 - 24th October 2008 
--------------------------------
- Feature: Multiple baseline and current directories can be provided as a
  parameter
- Change: Report format modified for better support for multiple directories   
- Change: GCC toolchain is not support in Linux environment
- Change: Progress information is now similar than the one used in
  HeaderAnalyser

Version 3.0.7 - 12th August 2008
--------------------------------
- Fix: Temporary path was not handled correctly if it contained spaces

Version 3.0.6 - 19th May 2008
-----------------------------
- Change: Progress information now displays more details

Version 3.0.5 - 8th February 2008
---------------------------------
- Change: If temp parameter is not defined, a global system temporary directory
  is used instead
- Change: If tools parameter is not defined, PATH system environment variable
  is scanned for trying to find where the tool chain is installed

Version 3.0.4 - 25th September 2007
-----------------------------------
- Feature: Allow the following changes to function signatures:
  - Function parameter value can be changed from non-const to const
  - Function can be changed from non-const to const

===============================================================================

Copyright (c) 2001-2009 Nokia Corporation and/or its subsidiary(-ies). 
All rights reserved.

This component and the accompanying materials are made available
under the terms of the License "Symbian Foundation License v1.0"
which accompanies this distribution, and is available
at the URL "http://www.symbianfoundation.org/legal/sfl-v10.html".
